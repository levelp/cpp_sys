/// Ссылки и указатели
/// ------------------
#include <iostream>

#define SHOW(x) { cout << #x << " = " << x << endl; };

using namespace std;

int c = 0;

void f1(int& i) {
  i = 10;
}

void f2(int i) {
  i = 20;
  cout << "i = " << i << endl;
}

void f3(char* i) {
  // i - указатель, т.е. это
  // переменная содержащая адрес
  //i = &c;
  *i = 33;
}

int main() {
  // 2 обычные переменные-значения
  int a = 2;
  int b = 3;
  // Указатель: имя_типа * имя_переменной
  int* a_ptr; // Указатель
  a_ptr = &a; // адрес переменной получаем при помощи '&'

  // Чтобы объявить несколько указателей
  // * надо поставить перед каждым из них
  int* p1, p2; // p1 - указатель, p2 - обычная переменная
  p2 = 10;
  p1 = &p2;
  SHOW(p2)
  SHOW(p1)
  SHOW(*p1) // Разыменование

  // Зачем нужны указатели
  // ---------------------
  // 1. Из одной фунции поменять переменную в другой функции,
  // если есть на неё указатель
  // 2. Мы можем заводить массивы заранее неизвестной длины
  // в динамической памяти
  // 3. Для создание структур данных в динамической памяти
  //  (списки, деревья и т.д.)
  int N = 100;
  // cin >> N; // Ввод от пользователя
  p1 = new int[N];

  // После объявления указателя можно его переместить
  // на другую переменную
  int* ptr;
  ptr = &a; // ptr указывает на a
  ptr = &b; // ptr указывает на b

  int& a_ref = a; // Ссылка: a_ref и a - одна и та
  // же переменная
  // Два имени у одной переменной
  b = 123;
  a_ref = b;
  b = 20; // b - другая переменная
  SHOW(b)
  SHOW(a) // 123
  SHOW(a_ref) // 123

  a_ptr = &b;

  cout << "a_ref = " << a_ref << endl;

  f1(a);
  cout << "a = " << a << endl;

  f2(a);
  cout << "a = " << a << endl;

  f3((char*)&a);
  cout << "a = " << a << endl;

  return 0;
}
